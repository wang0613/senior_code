    DriverManager ：驱动管理对象
        (1) :管理和注册驱动
          static void       registerDriver(Driver driver) :注册与给定的驱动程序 DriverManager 。
          写代码使用：Class.forName("com.mysql.jdbc.Driver");
          mysql 5 以后版本的驱动jar包可以省略注册驱动的步骤
        (2) :创建数据库的连接
        static Connection    getConnection(String url, String user, String password)
        尝试建立与给定数据库URL的连接。  url:指定连接的路径

    Connection： 数据库连接对象（与特定数据库的连接）
        1. 获取执行SQL的对象：
        Statement     createStatement()； 创建一个 Statement对象，用于将SQL语句发送到数据库。
        PreparedStatement  prepareStatement(String sql)；创建一个 PreparedStatement对象，用于将参数化的SQL语句发送到数据库。
       2.管理事务：
        开启事务：void  setAutoCommit(boolean autoCommit) 参数为false即为关闭自动提交，开启手动提交
        提交事务：void  commit();
        回滚事务  void  rollback();

    Statement：执行sql的对象(用于执行静态SQL语句并返回其生成的结果的对象)
        1.执行sql：boolean execute(String sql);执行给定的SQL语句
        2.int executeUpdate(String sql)  执行DML语句增删改（insert,update,delete）,DDL（create,alter,drop）
           返回值是影响的行数，可以通过影响的行数来判断DML语句是否执行成功，返回值 >0执行成功！
        3.ResultSet executeQuery(String sql)；执行DQL（查询）语句，返回一个结果集对象

    ResultSet ：结果集对象
         boolean next(): 游标向下移动一行，判断当前行是否是最后一行末尾(是否有数据)，如果是，则返回false，如果不是则返回true
         getXxx(参数):获取数据
                * Xxx：代表数据类型   如： int getInt() ,	String getString()
                    1. int：代表列的编号,从1开始   如： getString(1)
                    2. String：代表列名称。 如： getDouble("balance");


    PreparedStatement ：表示预编译的 SQL 语句的对象。 ， 继承自statement
        SQL注入问题：：在拼接sql时，有一些sql的特殊关键字参与字符串的拼接。会造成安全性问题
        需要使用preparedStatement对象解决sql注入问题，（登录案例）
    预编译SQL？
        statement：用于执行静态 SQL 语句并返回它所生成结果的对象，容易产生SQL注入问题
        预编译SQL：参数使用？作为占位符，在执行SQL的时候给问号赋值
        PreparedStatement pstmt = con.prepareStatement("UPDATE EMPLOYEES
                                             SET SALARY = ? WHERE ID = ?");
           pstmt.setBigDecimal(1, 153833.00)
           pstmt.setInt(2, 110592)


________________________________________________________________
## 每次都要注册驱动,处理异常 过于麻烦：
    解决办法：抽取工具类
    分析: 1. 注册驱动也抽取
       	  2. 抽取一个方法获取连接对象
       		* 需求：不想传递参数（麻烦），还得保证工具类的通用性。
       		* 解决：配置文件
       			jdbc.properties
       				url=
       				user=
       				password=
	      3. 抽取一个方法释放资源
抽取完毕：JDBCUtils
——————————————————————————————————————————————————————————————————————
